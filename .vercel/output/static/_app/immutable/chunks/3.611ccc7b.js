import{s as O,n as M}from"./scheduler.fe6f3ea4.js";import{S as W,i as Z,g as y,s as n,M as k,h as C,J as m,c as t,N as b,a,f as e}from"./index.c8da2d3c.js";function $(I){let p,S='mdsvex has automatic, built-in syntax highlighting with <a href="https://prismjs.com/" rel="nofollow">Prism.js</a>; just include the language name after the triple backticks, like so:',A,u,q=`<pre class="shiki dark-plus" style="background-color: #1E1E1E" tabindex="0"><code><span class="line"><span style="color: #D4D4D4">&#96;&#96;&#96;css</span></span>
<span class="line"><span style="color: #D4D4D4">/* Your CSS here */</span></span>
<span class="line"><span style="color: #D4D4D4">&#96;&#96;&#96;</span></span></code></pre>`,d,o,T="And that will render just like so:",F,h,J=`<pre class="shiki dark-plus" style="background-color: #1E1E1E" tabindex="0"><code><span class="line"><span style="color: #D7BA7D">.my-css-class</span><span style="color: #D4D4D4"> &#123;</span></span>
<span class="line"><span style="color: #D4D4D4">  </span><span style="color: #9CDCFE">color</span><span style="color: #D4D4D4">: </span><span style="color: #CE9178">#ffd100</span><span style="color: #D4D4D4">;</span></span>
<span class="line"><span style="color: #D4D4D4">  </span><span style="color: #9CDCFE">box-sizing</span><span style="color: #D4D4D4">: </span><span style="color: #CE9178">border-box</span><span style="color: #D4D4D4">;</span></span>
<span class="line"><span style="color: #D4D4D4">  </span><span style="color: #6A9955">/* etc... */</span></span>
<span class="line"><span style="color: #D4D4D4">&#125;</span></span></code></pre>`,v,c,B="Here’s how you’d do JavaScript:",H,f,Q=`<pre class="shiki dark-plus" style="background-color: #1E1E1E" tabindex="0"><code><span class="line"><span style="color: #D4D4D4">&#96;&#96;&#96;js</span></span>
<span class="line"><span style="color: #D4D4D4">// You can use js or javascript for the language</span></span>
<span class="line"><span style="color: #D4D4D4">&#96;&#96;&#96;</span></span></code></pre>`,x,r,L="Highlighted code sample:",P,E,R=`<pre class="shiki dark-plus" style="background-color: #1E1E1E" tabindex="0"><code><span class="line"><span style="color: #569CD6">const</span><span style="color: #D4D4D4"> </span><span style="color: #DCDCAA">invertNumberInRange</span><span style="color: #D4D4D4"> = (</span><span style="color: #9CDCFE">num</span><span style="color: #D4D4D4">, </span><span style="color: #9CDCFE">range</span><span style="color: #D4D4D4">) </span><span style="color: #569CD6">=&gt;</span><span style="color: #D4D4D4"> &#123;</span></span>
<span class="line"><span style="color: #D4D4D4">  </span><span style="color: #C586C0">return</span><span style="color: #D4D4D4"> </span><span style="color: #9CDCFE">range</span><span style="color: #D4D4D4"> - </span><span style="color: #9CDCFE">num</span><span style="color: #D4D4D4">;</span></span>
<span class="line"><span style="color: #D4D4D4">&#125;;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #DCDCAA">invertNumberInRange</span><span style="color: #D4D4D4">(</span><span style="color: #B5CEA8">25</span><span style="color: #D4D4D4">, </span><span style="color: #B5CEA8">100</span><span style="color: #D4D4D4">); </span><span style="color: #6A9955">// 75</span></span></code></pre>`,_,D,N="Of course, mdsvex supports Svelte highlighting, too:",j,g,Y=`<pre class="shiki dark-plus" style="background-color: #1E1E1E" tabindex="0"><code><span class="line"><span style="color: #808080">&lt;</span><span style="color: #569CD6">script</span><span style="color: #808080">&gt;</span></span>
<span class="line"><span style="color: #D4D4D4">	</span><span style="color: #C586C0">import</span><span style="color: #D4D4D4"> </span><span style="color: #9CDCFE">myComponent</span><span style="color: #D4D4D4"> </span><span style="color: #C586C0">from</span><span style="color: #D4D4D4"> </span><span style="color: #CE9178">&#39;$lib/components/myComponent.svelte&#39;</span><span style="color: #D4D4D4">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #D4D4D4">	</span><span style="color: #C586C0">export</span><span style="color: #D4D4D4"> </span><span style="color: #569CD6">let</span><span style="color: #D4D4D4"> </span><span style="color: #9CDCFE">myProp</span><span style="color: #D4D4D4"> = </span><span style="color: #569CD6">undefined</span><span style="color: #D4D4D4">;</span></span>
<span class="line"><span style="color: #808080">&lt;/</span><span style="color: #569CD6">script</span><span style="color: #808080">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #808080">&lt;</span><span style="color: #569CD6">div</span><span style="color: #808080">&gt;</span></span>
<span class="line"><span style="color: #D4D4D4">	</span><span style="color: #808080">&lt;</span><span style="color: #4EC9B0">MyComponent</span><span style="color: #D4D4D4"> </span><span style="color: #9CDCFE">prop</span><span style="color: #D4D4D4">=</span><span style="color: #569CD6">&#123;</span><span style="color: #9CDCFE">myProp</span><span style="color: #569CD6">&#125;</span><span style="color: #808080">&gt;</span></span>
<span class="line"><span style="color: #808080">&lt;/</span><span style="color: #569CD6">div</span><span style="color: #808080">&gt;</span></span></code></pre>`,w,i,z="All these colors are in the <code>_prism.scss</code> file inside <code>src/lib/assets/scss</code>, if you’d like to change them.";return{c(){p=y("p"),p.innerHTML=S,A=n(),u=new k(!1),d=n(),o=y("p"),o.textContent=T,F=n(),h=new k(!1),v=n(),c=y("p"),c.textContent=B,H=n(),f=new k(!1),x=n(),r=y("p"),r.textContent=L,P=n(),E=new k(!1),_=n(),D=y("p"),D.textContent=N,j=n(),g=new k(!1),w=n(),i=y("p"),i.innerHTML=z,this.h()},l(s){p=C(s,"P",{"data-svelte-h":!0}),m(p)!=="svelte-vtcwwv"&&(p.innerHTML=S),A=t(s),u=b(s,!1),d=t(s),o=C(s,"P",{"data-svelte-h":!0}),m(o)!=="svelte-1rcvqzl"&&(o.textContent=T),F=t(s),h=b(s,!1),v=t(s),c=C(s,"P",{"data-svelte-h":!0}),m(c)!=="svelte-12xene8"&&(c.textContent=B),H=t(s),f=b(s,!1),x=t(s),r=C(s,"P",{"data-svelte-h":!0}),m(r)!=="svelte-bt4b12"&&(r.textContent=L),P=t(s),E=b(s,!1),_=t(s),D=C(s,"P",{"data-svelte-h":!0}),m(D)!=="svelte-t0oiww"&&(D.textContent=N),j=t(s),g=b(s,!1),w=t(s),i=C(s,"P",{"data-svelte-h":!0}),m(i)!=="svelte-7oz8om"&&(i.innerHTML=z),this.h()},h(){u.a=d,h.a=v,f.a=x,E.a=_,g.a=w},m(s,l){a(s,p,l),a(s,A,l),u.m(q,s,l),a(s,d,l),a(s,o,l),a(s,F,l),h.m(J,s,l),a(s,v,l),a(s,c,l),a(s,H,l),f.m(Q,s,l),a(s,x,l),a(s,r,l),a(s,P,l),E.m(R,s,l),a(s,_,l),a(s,D,l),a(s,j,l),g.m(Y,s,l),a(s,w,l),a(s,i,l)},p:M,i:M,o:M,d(s){s&&(e(p),e(A),u.d(),e(d),e(o),e(F),h.d(),e(v),e(c),e(H),f.d(),e(x),e(r),e(P),E.d(),e(_),e(D),e(j),g.d(),e(w),e(i))}}}const U={title:"Syntax highlighting with mdsvex",date:"2021-12-01",updated:"2021-12-01",categories:["sveltekit","web","css","markdown"],coverImage:"/images/linus-nylund-Q5QspluNZmM-unsplash.jpg",coverWidth:16,coverHeight:9,excerpt:"This post shows you how syntax highlighting works here."};class V extends W{constructor(p){super(),Z(this,p,null,$,O,{})}}export{V as default,U as metadata};
